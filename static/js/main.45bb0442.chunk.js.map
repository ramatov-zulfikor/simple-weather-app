{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","value","onChange","e","target","onKeyPress","key","fetch","then","response","json","result","Fragment","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","getFullDate","Date","Math","floor","ReactDOM","render","document","getElementById"],"mappings":"+LAEMA,EACC,mCADDA,EAEE,2CA2DOC,EAxDH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAERC,EAFQ,KAEDC,EAFC,OAGgBF,mBAAS,IAHzB,mBAGRG,EAHQ,KAGCC,EAHD,KA4BhB,OACE,sBAAKC,UAAqC,qBAAjBF,EAAQG,MAA0BH,EAAQG,KAAKC,KAAO,GAAM,MAAQ,WAA7F,UACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,MAAQT,EACRU,SAAW,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOH,QACpCI,WApBW,SAACF,GACJ,UAAVA,EAAEG,KACJC,MAAM,GAAD,OAAKlB,EAAL,qBAA4BG,EAA5B,+BAA0DH,IAC5DmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,YAiBc,qBAAjBC,EAAQG,KAClB,eAAC,IAAMe,SAAP,WACE,sBAAKhB,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UAAiCF,EAAQmB,KAAzC,KAAmDnB,EAAQoB,IAAIC,WAC/D,qBAAKnB,UAAU,gBAAf,SAvCY,SAACoB,GACnB,IAGMC,EAHO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAG/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAJS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEf,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA8BKE,CAAY,IAAIC,WAEnD,sBAAK9B,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UAAgC+B,KAAKC,MAAMlC,EAAQG,KAAKC,MAAxD,UACA,qBAAKF,UAAU,eAAf,SAAgCF,EAAQA,QAAQ,GAAGG,aAGlD,wD,MCnDXgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45bb0442.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst api = {\n  key: '9c3d988f28798b8531c0a84f67e38eb5',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nconst App = () => {\n\n  const [ query, setQuery ] = useState('')\n  const [ weather, setWeather ] = useState({})\n\n  const getFullDate = (d) => {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    const day = days[d.getDay()]\n    const date = d.getDate()\n    const month = months[d.getMonth()]\n    const year = d.getFullYear()\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  const getWeather = (e) => {\n    if (e.key === 'Enter') {\n      fetch(`${ api.base }weather?q=${ query }&units=metric&appid=${ api.key }`)\n        .then(response => response.json())\n        .then(result => {\n          setWeather(result)\n          setQuery('')\n        })\n    }\n  }\n\n  return (\n    <div className={ (typeof weather.main !== 'undefined') && (weather.main.temp < 20) ? 'app' : 'app warm' }>\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search...\"\n          value={ query }\n          onChange={ (e) => setQuery(e.target.value) }\n          onKeyPress={ getWeather }\n        />\n      </div>\n      { (typeof weather.main !== 'undefined') ? (\n      <React.Fragment>\n        <div className=\"location-box\">\n          <div className=\"location-city\">{ weather.name }, { weather.sys.country }</div>\n          <div className=\"location-date\">{ getFullDate(new Date()) }</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"weather-temp\">{ Math.floor(weather.main.temp) }&#176;</div>\n          <div className=\"weather-note\">{ weather.weather[0].main }</div>\n        </div>\n      </React.Fragment>\n      ) : (<span>Search your city</span>) }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}